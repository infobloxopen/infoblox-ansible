---
- name: Clean up existing EA
  infoblox.nios_modules.nios_extensible_attribute:
    name: stringEA
    type: STRING
    state: absent
    provider: "{{ nios_provider }}"

- name: Create STRING EA
  infoblox.nios_modules.nios_extensible_attribute:
    name: stringEA
    type: STRING
    default_value: string
    min: 1
    max: 15
    comment: Created string EA with Ansible
    state: present
    provider: "{{ nios_provider }}"
  register: create_string_ea

- name: Update STRING EA Comment
  infoblox.nios_modules.nios_extensible_attribute:
    name: stringEA
    type: STRING
    default_value: string
    min: 1
    max: 15
    comment: Updated string EA with Ansible
    state: present
    provider: "{{ nios_provider }}"
  register: update_string_ea

- name: Create Integer EA
  infoblox.nios_modules.nios_extensible_attribute:
    name: IntegerEA
    type: INTEGER
    default_value: "15"
    min: 1
    max: 15
    flags: I
    comment: Created string EA with Ansible
    state: present
    provider: "{{ nios_provider }}"
  register: create_integer_ea

- name: Update Integer EA value
  infoblox.nios_modules.nios_extensible_attribute:
    name: IntegerEA
    type: INTEGER
    default_value: "14"
    min: 1
    max: 15
    flags: I
    comment: Created string EA with Ansible
    state: present
    provider: "{{ nios_provider }}"
  register: update_integer_ea

- name: Remove STRING EA Comment
  infoblox.nios_modules.nios_extensible_attribute:
    name: stringEA
    type: STRING
    default_value: string
    min: 1
    max: 15
    state: present
    provider: "{{ nios_provider }}"
  register: remove_string_ea

- name: Remove Integer EA definition
  infoblox.nios_modules.nios_extensible_attribute:
    name: IntegerEA
    type: INTEGER
    default_value: "14"
    min: 1
    max: 15
    flags: I
    comment: Created string EA with Ansible
    state: absent
    provider: "{{ nios_provider }}"
  register: remove_integer_ea

- name: Create ENUM EA
  infoblox.nios_modules.nios_extensible_attribute:
    name: enumEA
    type: ENUM
    list_values:
      - option1
      - option2
    default_value: option1
    comment: Created enum EA with Ansible
    state: present
    provider: "{{ nios_provider }}"
  register: create_enum_ea

- name: Update ENUM EA default value
  infoblox.nios_modules.nios_extensible_attribute:
    name: enumEA
    type: ENUM
    list_values:
      - option1
      - option2
    default_value: option2
    comment: Updated enum EA default value with Ansible
    state: present
    provider: "{{ nios_provider }}"
  register: update_enum_ea

- name: Create DATE EA
  infoblox.nios_modules.nios_extensible_attribute:
    name: dateEA
    type: DATE
    default_value: "2023-01-01"
    comment: Created date EA with Ansible
    state: present
    provider: "{{ nios_provider }}"
  register: create_date_ea

- name: Update DATE EA default value
  infoblox.nios_modules.nios_extensible_attribute:
    name: dateEA
    type: DATE
    default_value: "2023-12-31"
    comment: Updated date EA default value with Ansible
    state: present
    provider: "{{ nios_provider }}"
  register: update_date_ea

- name: Check if the EA already exists
  infoblox.nios_modules.nios_extensible_attribute:
    name: existEA
    state: present
    provider: "{{ nios_provider }}"
  register: ea_exists

- name: Verify outcomes including new tests
  ansible.builtin.assert:
    that:
      - create_string_ea.changed
      - update_string_ea.changed
      - create_integer_ea.changed
      - update_integer_ea.changed
      - remove_string_ea.changed
      - remove_integer_ea.changed
      - create_enum_ea.changed
      - update_enum_ea.changed
      - create_date_ea.changed
      - update_date_ea.changed
