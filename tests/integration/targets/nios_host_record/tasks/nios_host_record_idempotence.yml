---
- name: Cleanup the parent object
  infoblox.nios_modules.nios_zone:
    name: ansible.com
    state: absent
    provider: "{{ nios_provider }}"

- name: Create the parent object
  infoblox.nios_modules.nios_zone:
    name: ansible.com
    state: present
    provider: "{{ nios_provider }}"

- name: Cleanup ipv4 host record
  infoblox.nios_modules.nios_host_record:
    name: host.ansible.com
    ipv4:
      - address: 192.168.10.1
    state: absent
    provider: "{{ nios_provider }}"

- name: Create an ipv4 host record
  infoblox.nios_modules.nios_host_record:
    name: host.ansible.com
    ipv4:
      - address: 192.168.10.1
    state: present
    provider: "{{ nios_provider }}"
  register: ipv4_create1

- name: Recreate an ipv4 host record
  infoblox.nios_modules.nios_host_record:
    name: host.ansible.com
    ipv4:
      - address: 192.168.10.1
    state: present
    provider: "{{ nios_provider }}"
  register: ipv4_create2

- name: Add a comment to an existing host record
  infoblox.nios_modules.nios_host_record:
    name: host.ansible.com
    ipv4:
      - address: 192.168.10.1
    comment: this is a test comment
    state: present
    provider: "{{ nios_provider }}"
  register: ipv4_update1


# TODO: Uncomment this block when the issue resolved
# - name: Add a comment to an existing host record
#  infoblox.nios_modules.nios_host_record:
#    name: host.ansible.com
#    ipv4:
#      - address: 192.168.10.1
#    comment: this is a test comment
#    state: present
#    provider: "{{ nios_provider }}"
#  register: ipv4_update2

- name: Remove a host record from the system
  infoblox.nios_modules.nios_host_record:
    name: host.ansible.com
    state: absent
    provider: "{{ nios_provider }}"
  register: ipv4_delete1

- name: Remove a host record from the system
  infoblox.nios_modules.nios_host_record:
    name: host.ansible.com
    state: absent
    provider: "{{ nios_provider }}"
  register: ipv4_delete2

- name: Create an ipv4 host record bypassing DNS
  infoblox.nios_modules.nios_host_record:
    name: host
    ipv4:
      - address: 192.168.10.1
    dns: false
    state: present
    provider: "{{ nios_provider }}"
  register: ipv4_create3

- name: Recreate an ipv4 host record bypassing DNS
  infoblox.nios_modules.nios_host_record:
    name: host
    ipv4:
      - address: 192.168.10.1
    dns: false
    state: present
    provider: "{{ nios_provider }}"
  register: ipv4_create4

- name: Create an ipv4 host record via DHCP and MAC
  infoblox.nios_modules.nios_host_record:
    name: host
    configure_for_dns: false
    ipv4:
      - address: 192.168.10.1
        dhcp: true
        mac: "00-80-C8-E3-4C-BD"
    state: present
    provider: "{{ nios_provider }}"
  register: ipv4_create5

# - name: Recreate an ipv4 host record via DHCP and MAC
#  infoblox.nios_modules.nios_host_record:
#    name: host
#    configure_for_dns: false
#    ipv4:
#      - address: 192.168.10.1
#        dhcp: true
#        mac: "00-80-C8-E3-4C-BD"
#    state: present
#    provider: "{{ nios_provider }}"
#  register: ipv4_create6

- name: Verify idempotence and changes of IPv4 host record operations
  ansible.builtin.assert:
    that:
      - ipv4_create1.changed
      - not ipv4_create2.changed
      - ipv4_update1.changed
#      - not ipv4_update2.changed
      - ipv4_delete1.changed
      - not ipv4_delete2.changed
      - ipv4_create3.changed
      - not ipv4_create4.changed
      - ipv4_create5.changed
#      - not ipv4_create6.changed
